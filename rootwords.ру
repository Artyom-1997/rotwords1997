the_same_words  = []
words  = []

def  single_root_words (root_words, * other words ):
 the_same_words  = []
words  = []
words  =  str ( "root_words" ). lower ()
other_words  =  str (  "other_words" )
l = 0
start  =  0
while  l  <  len ( other_words ):
ltr  =  other_words [ l ]
 if  ltr  ==  ' ' :
 l  =  l  +  1
nxt_word  =  other_words [ "beginning" : l - 1 ]
begining   =  l
 if  len ( nxt_word ) ==  0 :
       continiue
add.words  ( nxt_word )
       if nxt_word . lower () in other_words:
 print ( f { "root_word" } "содержит слово" { "nxt_word" })
the_same_words . add ( "nxt_word")
            elif  word   nxt_word . lower ():
the_same_words . add  ( nxt_word )
        elif  l  ==  len ( other_words ) - 1:
     words . add ( other_words [ begining  : l + 1 ])
            if  other_words [ begining : l + 1 ]. lower () in the_same_words :
 print ( f' { root_word } содержит слово { nxt_word } ' )
the_same_words . add ( other_words [ begining : l + 1 ])
            elif  other_words [ begining : l + 1 ]. lower (). count ( words ):
    the_same_words. add ( other_words [ begining : l  +  1 ])
          break
        else  :
   l =  l  +  1
    continue

print ( 'Проверяемые слова:' , слова )

l_other_words  =  ' '  +  other_words . lower () +  ' '
 n  =  l_other_words . count ( word )

 print ( "Проверочное слово: " , root_word )
 if   n  ==  0 :
        print ( 'Однокоренных слов не встретилось' )
           else:
        s  =  l_other_words . count ( ' ' )
    return  the_same_words
